sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
sample(v1,5,replace = FALSE)
# 2.)
probabilities <- c(0.0,NA,0.4,0.1,0.03)
missing_value <- 1 - sum(probabilities, na.rm=TRUE)
probabilities
missing_value
cumsum(probabilities)
# b.)
probabilities <- c(0.0,0.47,0.4,0.1,0.03)
cumsum(probabilities)
# c.)
mean(X * probabilities)
# 2.)
X <- c(1:5)
# c.)
mean(X * probabilities)
# c.)
sum(X * probabilities)
# d.)
barplot(cumuluative,names.arg=X,xlab="X",ylab="CDF")
cumulative <- cumsum(probabilities)
# d.)
barplot(cumuluative,names.arg=X,xlab="X",ylab="CDF")
# d.)
barplot(cumulative,names.arg=X,xlab="X",ylab="CDF")
probabilities[1]
probabilities[2]
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(8,10,0.8)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(0,10,0.8)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(2,10,0.8)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(5,10,0.8)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(9,10,0.8)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(10,10,0.8)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
dbinom(7,10,0.8)
dbinom(2,2,0.5)
pmf_tails <- dbinom(0:3,3,0.5)
pmf_tails
dbinom(0:4,10,0.5)
sum(dbinom(0:4,10,0.5))
# Worksheet 9
# 1.
sample(5,8,replace=FALSE,prob=0.2)
# Worksheet 9
# 1.
sample(8,5,replace=FALSE,prob=0.2)
# Lecture 9
# p = 0,8, n = 10. Find mean and stdev.
# mean = 8
# variance = 8(0.2) = 1.6
# stdev = sqrt(variance) = 1.265
# dbinom (x, size, prob)
dbinom(7,10,0.8)
# Worksheet 9
# 1.
sample(8,5,replace=FALSE,prob=rep(0.2,8))
dbinom(8,5,0.2)
dbinom(5,8,0.2)
# Worksheet 9
# 1.
dbinom(2,8,0.2)
# Worksheet 9
# 1.
dbinom(5,8,0.2)
# 2.
rbinom(7,200,0.03)
# 2.
rbinom(7,200,1)
# 2.
rbinom(7,200,0.03)
# 3.
sample(1:6,5,FALSE,rep(1/6,6)
# 3.
sample(1:6,5,FALSE,rep(1/6,6))
# 3.
sample(1:6,5,FALSE,rep(1/6,6))
# 3.
sample(1:6,5,FALSE,rep(1/6,6))
# 3.
sample(1:6,5,FALSE,rep(1/6,6))
# 3.
sample(1:6,5,FALSE,rep(1/6,6))
# 3.
count(sample(1:6,5,FALSE,rep(1/6,6)) == 3)
# 3.
which(sample(1:6,5,FALSE,rep(1/6,6)) == 3)
# 3.
which(sample(1:6,5,FALSE,rep(1/6,6)) == 3)
# 3.
which(sample(1:6,5,FALSE,rep(1/6,6)) == 3)
# 3.
which(sample(1:6,5,FALSE,rep(1/6,6)) == 3)
sample(1:6,5,FALSE,rep== 3
# 3.
sample(1:6,5,FALSE,rep== 3
# 3.
sample(1:6,5,FALSE,rep == 3
# 3.
sample(1:6,5,FALSE,rep == 3
# 3.
sample(1:6,5,FALSE,rep == 3
# 3.
sample(1:6,5,FALSE,rep == 3
# 3.
sample(1:6,5,FALSE,rep(1/6)) == 3
# 3.
sample(1:6,5,FALSE,rep(1/6,6)) == 3
num(die ==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
num(die ==3)
# Worksheet 5
# 1.
x <- c(3,7,7,8,9,10,1)
which(x > 7)
die == 3
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
die == 3
length(die == 3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
length(die == 3)
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,FALSE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=FALSE,rep(1/6,6))
die
# 3.
die <- sample(1:6,5,replace=FALSE,rep(1/6,6))
die
# 3.
die <- sample(1:6,5,replace=FALSE,rep(1/6,6))
die
die
sum(die==3)
die
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 3.
die <- sample(1:6,5,replace=TRUE,rep(1/6,6))
sum(die==3)
# 4.
k <- c(1:30)
plot(k,dbinom(k,size=30,prob=.15),type="h")
plot(k,dbinom(k,size=30,prob=.4),type="h")
plot(k,dbinom(k,size=30,prob=.15),type="h")
# 4.
par(mfrow=c(2,1))
k <- c(1:30)
plot(k,dbinom(k,size=30,prob=.15),type="h")
plot(k,dbinom(k,size=30,prob=.4),type="h")
plot(k,dbinom(k,size=25,prob=.5),type="h")
# 4.
k <- c(1:25)
plot(k,dbinom(k,size=25,prob=.5),type="h")
# 4.
k <- c(1:25)
plot(k,dbinom(k,size=25,prob=.4),type="h")
dbinom(2,2,0.5)
pmf_tails <- dbinom(0:3,3,0.5)
sum(dbinom(0:4,10,0.5)) # equivalently, pbinom(4,10,0.5)
pmf_tails
dbinom(1:25,25,0.4)
# Worksheet 9
# 1.
dbinom(5,8,0.2)
# 5.
dbinom(3,10,0.4)
dbinom(5,20,0.4)
# 5.
dbinom(1:10,10,0.4)[3]
dbinom(1:20,20,0.4)[5]
plot(1:10,v1,type="h")
# 5
v1 <- dbinom(1:10,10,0.4)
v1[3]
v2 <- dbinom(1:20,20,0.4)
v2[3]
par(mfrow=c(1,2))
par(mfrow=c(1,2))
plot(1:10,v1,type="h")
# Example
par(mfrow=c(2,1))
plot(1:10,v1,type="h")
plot(1:20,v2,type="h")
cumsum(probabilities)
# HW 4 Part B, Johnny Lin
# 1.
# a.)
# 3 outcomes: 0 sixes (5/6 * 5/6), 2 sixes (1/6 * 1/6), 1 six (1-25/36-1/36)
probabilities <- c(25/36,10/36,1/36)
cumsum(probabilities)
barplot(cdf1)
cdf1 <- cumsum(probabilities)
barplot(cdf1)
barplot(cdf1, xlab = "Number of sixes rolled", ylab = "Probability")
# d.)
barplot(cumulative,names.arg=X,xlab="X",ylab="CDF")
barplot(cdf1, xlab = "Number of sixes rolled", ylab = "Probability", names.arg=c(1,2,3))
barplot(cdf1, xlab = "Number of sixes rolled", ylab = "Probability", names.arg=c(0,1,2))
barplot(cdf1, main = "Cumulative Distribution Function", xlab = "Number of sixes rolled", ylab = "Probability", names.arg=c(0,1,2))
choose(3,2)
# b.)
# HHH, HTT,HTH,HHT,THT,TTH,THH,TTT
# 3 outcomes: 0 heads (0.125), 3 heads (0.125), 1 head (0.375), 2 head (0.375)
probabilities2 <- c(0.125,0.375,0.375,0.125)
cdf2 <- cumsum(probabilities2)
barplot(cdf2, main = "CDF", xlab = "Max number of heads", ylab = "Probability")
barplot(cdf2, main = "CDF", xlab = "Max number of heads", ylab = "Probability", names.arg = c(0,1,2,3))
# 2.
sample(1:8,20)
# 2.
sample(1:8,20, replace = TRUE)
# 2.
sample(1:8,20, replace = TRUE)
# 2.
sample(1:8,20, replace = TRUE, prob = rep(.125,8))
# 2.
sample(1:8,20, replace = TRUE, prob = rep(.125,8))
# 2.
sample(1:8,20, replace = TRUE, prob = rep(.125,8))
# 2.
is.vector(sample(1:8,20, replace = TRUE))
# 2.
length(sample(1:8,20, replace = TRUE))
# 3. using mtcars
data(mtcars)
View(mtcars)
# 3. using mtcars
data(mtcars)
# 3. using mtcars
data(mtcars)
View(mtcars)
View(mtcars)
# 3. using mtcars
data("mtcars")
View(mtcars)
sample(mtcars.mpg,5)
sample(mtcars[mpg],5)
class(mtcars)
sample(mtcars$mpg,5)
sample(mtcars$mpg,5)
sample(mtcars$mpg,5)
sample(mtcars$mpg,5)
sample(mtcars$mpg,5)
print(sample(mtcars,6))
sample(mtcars,6)
sample(mtcars.rows,6)
nrows(mtcars)
nrow(mtcars)
mtcars[sample(1:nrow(mtcars), 6)]
mtcars[sample(1:nrow(mtcars), 6),]
print(mtcars[sample(1:nrow(mtcars), 6),])
# 12.
sample(c("Red", "Blue", "Green"), 2, prob = c(0.3,0.3,0.4))
# 12.
sample(c("Red", "Blue", "Green"), 2, prob = c(0.3,0.3,0.4))
# 12.
sample(c("Red", "Blue", "Green"), 2, prob = c(0.3,0.3,0.4))
# 12.
sample(c("Red", "Blue", "Green"), 2, prob = c(0.3,0.3,0.4))
# 12.
print(sample(c("Red", "Blue", "Green"), 2, prob = c(0.3,0.3,0.4)))
# Worksheet 10
#1.
X ~ UNIF(1,5)
punif(X,min=1,max=5,lower.tail=TRUE)
punif(q,min=1,max=5,lower.tail=TRUE)
# Worksheet 10
#1.
punif(1:5,min=1,max=5,lower.tail=TRUE)
dunif(1:5,min=1,max=5,lower.tail=TRUE)
dunif(1:5,min=1,max=5)
dunif(x=1:5,min=1,max=5)
punif(X=2,min=1,max=5,lower.tail=TRUE)
punif(q=2,min=1,max=5,lower.tail=TRUE)
punif(q=3.5,min=1,max=5,lower.tail=TRUE)
punif(q=3.5,min=1,max=5,lower.tail=TRUE)-punif(q=2,min=1,max=5,lower.tail=TRUE)
punif(X,min=1,max=5,lower.tail=TRUE)
# Worksheet 10
#1.
X <- c(1:5)
a.)
punif(X,min=1,max=5,lower.tail=TRUE)
dunif(X,min=1,max=5,lower.tail=TRUE)
dunif(X,min=1,max=5,lower.tail=TRUE)
dunif(X,min=1,max=5)
dnorm(X,mean=80,sd=12)
# 2.
X <- seq(-4,4,length=200)
dnorm(X,mean=80,sd=12)
plot(x,y)
y <- dnorm(X,mean=80,sd=12)
plot(x,y)
# 2.
X <- seq(-4,4,length=200)
y <- dnorm(X,mean=80,sd=12)
plot(X,y)
plot(X,y,type="l",lwd=2,col="blue")
y <- dnorm(X,mean=80,sd=12)
plot(X,y,type="l",lwd=2,col="blue")
x <- seq(-4,4,length=200)
y <- dnorm(x,mean=0,sd=1)
z <- plot(x,y,type="l",lwd=2,col="blue")
# 2.
X <- seq(0,160,length=200)
y <- dnorm(X,mean=80,sd=12)
plot(X,y,type="l",lwd=2,col="blue")
lines(X,y,type="l",lwd=2,col="black")
pnorm(95,mean=80,sd=12,lower.tail=TRUE)
pnorm(95,mean=80,sd=12,lower.tail=TRUE)-pnorm(65,mean=80,sd=12,lower.tail=TRUE)
# b.)
pnorm(74,mean=80,sd=12,lower.tail=TRUE)
# 3.
pnorm(116,mean=100,sd=16,lower.tail=TRUE)-pnorm(84,mean=100,sd=16,lower.tail=TRUE)
# b.)
qnorm(0.02,mean=100,sd=16)
# b.)
qnorm(0.98,mean=100,sd=16)
# b.)
qnorm(0.999,mean=100,sd=16)
# b.)
qnorm(0.98,mean=100,sd=16)
rnorm(n=100,mean=0,sd=1)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
# 4.
set.seed(1)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
# 4.
set.seed(1)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
sample(1:100,5,replace=FALSE)
# 4.
set.seed(1)
sample(1:100,5,replace=FALSE)
# 5.)
rvariates <- rnorm(n=100, mean = 75, sd=10)
rvariates
# 5.)
rvariates <- round(rnorm(n=100, mean = 75, sd=10))
rvariates
# 5.)
rvariates <- round(rnorm(n=100, mean = 75, sd=10))
length(rvariates > 95)
length(rvariates > 200)
# 5.)
rvariates <- round(rnorm(n=100, mean = 75, sd=10))
length(rvariates > 200)
sum(rvariates)
sum(rvariates > 95)
# 5.)
rvariates <- round(rnorm(n=100, mean = 75, sd=10))
sum(rvariates > 95)
# 5.)
rvariates <- round(rnorm(n=100, mean = 75, sd=10))
sum(rvariates > 95)
# 5.)
rvariates <- round(rnorm(n=100, mean = 75, sd=10))
sum(rvariates > 95)
# 6.)
rvariates <- round(rnorm(n=500, mean = 1.5))
rvariates
# 6.)
ppois(0,lambda=1.5)
# 6.)
ppois(0,lambda=1.5,lower=FALSE)
ppois(4,lambda=1.5)
1-ppois(4,lambda=1.5)
# 6.)
ppois(0,lambda=1.5)
dpois(4,lambda=1.5)
# 6.)
dpois(0,lambda=1.5)
setwd("C:/Users/jzlin/OneDrive/Documents/TOWN OF SALEM 2")
games <- read.csv("./tos_ranked - game_logs.csv")
ti_roles <- c("Coroner","Investigator","Lookout","Psychic","Seer","Sheriff","Spy","Tracker")
tp_roles <- c("Bodyguard","Cleric","Crusader","Trapper")
tpow_roles <- c("Jailor","Mayor","Monarch","Prosecutor")
tk_roles <- c("Deputy","Trickster","Veteran","Vigilante")
ts_roles <- c("Admirer","Amnesiac","Retributionist","Tavern Keeper")
town_roles <- c(ti_roles,tp_roles,tk_roles,ts_roles,tpow_roles)
cd_roles <- c("Dreamweaver","Enchanter","Illusionist","Medusa")
ck_roles <- c("Conjurer","Jinx","Ritualist")
cpow_roles <- c("Coven Leader","Hex Master","Witch")
cu_roles <- c("Necromancer","Poisoner","Potion Master","Voodoo Master","Wildling")
cov_roles <- c(cd_roles,ck_roles,cpow_roles,cu_roles)
na_roles <- c("Baker","Berserker","Plaguebearer","Soul Collector")
nk_roles <- c("Arsonist","Serial Killer","Shroud","Werewolf")
ne_roles <- c("Doomsayer","Executioner","Jester")
neut_roles <- c(na_roles,nk_roles,ne_roles)
total_games <- nrow(games)
total_wins <- sum(games$WINLOSS == "W")
total_wr <- total_wins/total_games
total_town_games <- sum(games$ROLE%in%town_roles)
total_town_wins <- sum(games$ROLE%in%town_roles & games$WINLOSS == "W")
town_wr <- total_town_wins/total_town_games
total_cov_games <- sum(games$ROLE%in%cov_roles)
total_cov_wins <- sum(games$ROLE%in%cov_roles & games$WINLOSS == "W")
cov_wr <- total_cov_wins/total_cov_games
total_neut_games <- sum(games$ROLE%in%neut_roles)
total_neut_wins <- sum(games$ROLE%in%neut_roles & games$WINLOSS == "W")
neut_wr <- total_neut_wins/total_neut_games
total_elo_gained <- tail(games$ELO,1) - head(games$ELO,1)
avg_elo_gained <- total_elo_gained/nrow(games)
barplot(c(town_wr,cov_wr,neut_wr,total_wr),
main="Ranked Winrate by Faction",xlab="Faction",ylab="Winrate",
names=c("Town","Coven","Neutral","All Roles"),col = c("green","purple","gray","yellow"))
plot(games$ELO,type="p")
abline(games$ELO,lty=2)
abline(h=games$ELO,lty=2)
qqnorm(games$ELO)
qqline(games$ELO)
